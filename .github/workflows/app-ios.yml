name: iOs workflow for build and deploy ðŸ¤–

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node version for compiling'
        required: true
        type: string
      ruby-version:
        description: 'Ruby version for compiling'
        required: true
        type: string
    secrets:
      APP_STORE_API_KEY:
        required: true
      APP_STORE_API_KEY_ID:
        required: true
      FASTLANE_PASSWORD:
        required: true
      FASTLANE_USER:
        required: true
      FIREBASE_TOKEN:
        required: true
      MATCH_PASSWORD:
        required: true
      NPM_TOKEN:
        required: true
      SSH_KEY:
        required: true

jobs:
  prepare-environment:
    runs-on: ubuntu-latest
    name: Prepares the env vars for the stage and if it should be deployed
    outputs:
      environment: ${{ steps.set-environment.outputs.environment }}
      should_deploy: ${{ steps.set-environment.outputs.should_deploy }}
    steps:
      - id: set-environment
        name: Set environment
        run: |
          if [[ $GITHUB_REF == *"release/development"* ]] ; then
              echo "environment=dev" >> $GITHUB_OUTPUT
              echo "should_deploy=true" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == *"release/staging"* ]] ; then
              echo "environment=staging" >> $GITHUB_OUTPUT
              echo "should_deploy=true" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == *"release/production"* ]] ; then
              echo "environment=prod" >> $GITHUB_OUTPUT
              echo "should_deploy=true" >> $GITHUB_OUTPUT
          fi

  build-ios:
    runs-on: ubuntu-latest
    name: Build the iOs bundle and upload artifact, run tests, lint ðŸ”¨
    needs: prepare-environment
    steps:
      - name: Check out source code
        uses: actions/checkout@v3

      - name: Set NPM registry
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          registry-url: https://registry.npmjs.org
          scope: '@taxdown'
          cache: 'yarn'

      - name: Install NPM dependencies
        run: yarn install --frozen-lockfile --network-timeout 600000
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Running linter
        run: yarn run lint

      - name: Running tests
        run: yarn test

      - name: Build iOs bundle
        run: yarn run build:ios

      - name: Archive iOs bundle
        uses: actions/upload-artifact@v3
        with:
          name: bundle-ios
          path: |
            ios/main.jsbundle
            ios/build/bundle/main.jsbundle.map
            ios/build/bundle/

  deployment-ios:
    runs-on: macos-latest
    name: Build ðŸ”¨ the iOs ipa and deploy ðŸš€ when the branch is one of the environments
    needs: [prepare-environment, build-ios]
    if: ${{ needs.prepare-environment.outputs.should_deploy == 'true' }}
    environment:
      name: ${{ needs.prepare-environment.outputs.environment }}
    env:
      STAGE: ${{ needs.prepare-environment.outputs.environment }}
      ITMSTRANSPORTER_FORCE_ITMS_PACKAGE_UPLOAD: true
    steps:
      - name: Set up ssh key for GitHub certificates repository access
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Check out source code
        uses: actions/checkout@v3

      - name: Set up Ruby and install Gems with cache
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ inputs.ruby-version }}
          bundler-cache: true

      - name: Set NPM registry
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          registry-url: https://registry.npmjs.org
          scope: '@taxdown'
          cache: 'yarn'

      - name: Install NPM dependencies
        run: yarn install --frozen-lockfile --network-timeout 600000
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Cache Pods
        uses: actions/cache@v3
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install Pods
        run: bundle exec fastlane ios install_dependencies

      - name: Download built ios bundle
        uses: actions/download-artifact@v3
        with:
          name: bundle-ios
          path: ios

      - name: Running ios fastlane build
        id: fastlane-build
        run: bundle exec fastlane ios build stage:$STAGE
        env:
          APP_STORE_API_KEY: ${{ secrets.APP_STORE_API_KEY }}
          APP_STORE_API_KEY_ID: ${{ secrets.APP_STORE_API_KEY_ID }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

      - name: Archive gym logs
        if: failure() && steps.fastlane-build.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: gym-logs
          path: /Users/runner/Library/Logs/gym

      - name: Archive ipa artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifact-ios
          path: ios/build/**/*.ipa

      - name: Running ios fastlane distribution
        run: bundle exec fastlane ios distribution stage:$STAGE
        env:
          APP_STORE_API_KEY: ${{ secrets.APP_STORE_API_KEY }}
          APP_STORE_API_KEY_ID: ${{ secrets.APP_STORE_API_KEY_ID }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
